@model FishAquarium.Models2.Klientas

@{
    ViewBag.Title = "Naujas klientas";
}

<h2>Naujas klientas</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>Kliento informacija</legend>
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.asmensKodas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.asmensKodas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.asmensKodas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vardas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vardas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vardas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pavarde, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pavarde, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pavarde, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gimimoData, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gimimoData, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.gimimoData, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefonas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefonas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefonas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.epastas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.epastas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.epastas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Išsaugoti" class="btn btn-success" />
            </div>
        </div>
    </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Atgal į sarašą »", "Index", "Klientas", new { @class="btn btn-default"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
